#include <stdint.h>
#include <string>
#include <vector>
#include <map>

#include "Token.h"

using std::string;
using std::vector;
using std::map;

class Tokenizer{
    public:
        Tokenizer(int state = 0): state{state} {charIndex = 0;};
        vector<Token> tokenizeStr(string str, int lineNum = 0);


    private:
        int state;
        int charIndex;

        const uint8_t transitionMatrix[21][36]{
            {8,17,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,5,3,17,10,13,16,16,16,16,16,16,16,16,16,7,7,17,1},
            {30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30},
            {30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30},
            {3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
            {30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30},
            {5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5},
            {30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30},
            {30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30},
            {9,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18},
            {9,19,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40},
            {12,12,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,11,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
            {12,12,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
            {12,12,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,12,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40},
            {40,40,40,40,40,40,40,14,40,40,40,40,40,40,40,40,40,40,40,40,40,40,21,21,21,21,21,21,21,21,21,21,40,40,21,40},
            {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,15,15,15,15,15,15,15,15,15,15,21,21,21,20},
            {40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,15,15,15,15,15,15,15,15,15,15,40,40,21,40},
            {40,40,40,40,40,40,40,14,40,40,40,40,40,40,40,40,40,40,40,40,40,40,16,16,16,16,16,16,16,16,16,16,40,40,40,40},
            {40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40},
            {40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40},
            {40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40},
            {40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40}
        };

        const map<char, int> alphabet {{'a', 0}, {'b', 0}, {'c', 0}, {'d', 0}, {'e', 0}, {'f', 0}, {'g', 0}, {'h', 0},
                                       {'i', 0}, {'j', 0}, {'k', 0}, {'l', 0}, {'m', 0}, {'n', 0}, {'o', 0}, {'p', 0},
                                       {'q', 0}, {'r', 0}, {'s', 0}, {'t', 0}, {'u', 0}, {'v', 0}, {'w', 0}, {'x', 0},
                                       {'y', 0}, {'z', 0}, {'A', 1}, {'B', 1}, {'C', 1}, {'D', 1}, {'E', 1}, {'F', 1},
                                       {'G', 1}, {'H', 1}, {'I', 1}, {'J', 1}, {'K', 1}, {'L', 1}, {'M', 1}, {'N', 1},
                                       {'O', 1}, {'P', 1}, {'Q', 1}, {'R', 1}, {'S', 1}, {'T', 1}, {'U', 1}, {'V', 1},
                                       {'W', 1}, {'X', 1}, {'Y', 1}, {'Z', 1}, {'*', 2}, {'/', 3}, {'+', 4}, {'-', 5},
                                       {'^', 6}, {'.', 7}, {'%', 8}, {'{', 9}, {'}', 10}, {'(', 11}, {')', 12}, {'[', 13},
                                       {']', 14}, {':', 15}, {';', 16}, {',', 17}, {'#', 18}, {'"', 19}, {'_', 20}, {'$', 21},
                                       {'0', 22}, {'1', 23}, {'2', 24}, {'3', 25}, {'4', 26}, {'5', 27}, {'6', 28}, {'7', 29},
                                       {'8', 30}, {'9', 31}, {'\\n', 32}, {' ', 33}, {'=', 35}};

        const map<int, TokenType> stateToTkn{{1, OPERATOR_TKN}, {2, PUNCTUATION_TKN}, {4, STRING_TKN}, {6, COMMENT_TKN}, {7, WHITESPACE_TKN},
                                             {9, KEYWORD_TKN}, {12, IDENTIFIER_TKN}, {13, INTEGER_TKN}, {15, DECIMAL_TKN},
                                             {16, INTEGER_TKN}, {17, UNKNOWN_TKN}, {18, UNKOWN_KEYWORD_TKN}, {19, UNKNOWN_IDENTIFIER_TKN},
                                             {20, UNKNOWN_DECIMAL_FORMAT_TKN}};

                   
        Token constructTkn(string text, int lineNum, int columnStart);
};